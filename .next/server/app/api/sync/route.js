/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/sync/route";
exports.ids = ["app/api/sync/route"];
exports.modules = {

/***/ "(rsc)/./app/api/sync/route.ts":
/*!*******************************!*\
  !*** ./app/api/sync/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _src_services_flowtrac__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../src/services/flowtrac */ \"(rsc)/./app/src/services/flowtrac.ts\");\n/* harmony import */ var _services_shopify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/shopify */ \"(rsc)/./app/services/shopify.ts\");\n\n// import { rateLimit } from '../../middleware/rateLimit';\n\n\n\n\nasync function POST(request) {\n    // Rate limiting\n    // const rateLimitResult = rateLimit(request);\n    // if (rateLimitResult) return rateLimitResult;\n    console.log('Sync job started');\n    try {\n        // 1. Load mapping.json\n        const mappingPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'mapping.json');\n        console.log('DEBUG: Resolved mappingPath in API route:', mappingPath);\n        let mapping = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(mappingPath, 'utf-8'));\n        // 2. Collect all SKUs (simple and bundle components)\n        const skus = new Set();\n        for (const product of mapping.products){\n            if (product.flowtrac_sku) skus.add(product.flowtrac_sku);\n            if (Array.isArray(product.bundle_components)) {\n                for (const comp of product.bundle_components){\n                    if (comp.flowtrac_sku) skus.add(comp.flowtrac_sku);\n                }\n            }\n        }\n        // 3. Fetch inventory data from Flowtrac\n        const flowtracInventory = await (0,_src_services_flowtrac__WEBPACK_IMPORTED_MODULE_3__.fetchFlowtracInventory)(Array.from(skus));\n        console.log('Fetched Flowtrac inventory', {\n            flowtracInventory\n        });\n        // 4. Build shopifyInventory map (simple and bundle SKUs)\n        const shopifyInventory = {};\n        for (const product of mapping.products){\n            if (Array.isArray(product.bundle_components) && product.shopify_sku) {\n                const quantities = product.bundle_components.map((comp)=>{\n                    const available = flowtracInventory[comp.flowtrac_sku] || 0;\n                    return Math.floor(available / comp.quantity);\n                });\n                shopifyInventory[product.shopify_sku] = quantities.length > 0 ? Math.min(...quantities) : 0;\n            } else if (product.shopify_sku && product.flowtrac_sku) {\n                shopifyInventory[product.shopify_sku] = flowtracInventory[product.flowtrac_sku] || 0;\n            }\n        }\n        // 5. Self-heal: Enrich mapping.json with missing Shopify variant and inventory item IDs\n        await (0,_services_shopify__WEBPACK_IMPORTED_MODULE_4__.enrichMappingWithShopifyVariantAndInventoryIds)();\n        // Reload mapping after enrichment\n        const updatedMapping = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(mappingPath, 'utf-8'));\n        // 6. Update inventory in Shopify for each SKU\n        const updateResults = {};\n        for (const [sku, quantity] of Object.entries(shopifyInventory)){\n            const product = updatedMapping.products.find((p)=>p.shopify_sku === sku);\n            const inventoryItemId = product?.shopify_inventory_item_id;\n            if (!inventoryItemId) {\n                updateResults[sku] = {\n                    success: false,\n                    error: 'No shopify_inventory_item_id in mapping.json'\n                };\n                console.error(`No shopify_inventory_item_id for SKU ${sku}`);\n                continue;\n            }\n            try {\n                await (0,_services_shopify__WEBPACK_IMPORTED_MODULE_4__.updateShopifyInventory)(inventoryItemId, quantity);\n                updateResults[sku] = {\n                    success: true\n                };\n                console.log(`Updated Shopify inventory for SKU ${sku} (inventory item ${inventoryItemId}) to ${quantity}`);\n            } catch (err) {\n                updateResults[sku] = {\n                    success: false,\n                    error: err.message\n                };\n                console.error(`Failed to update Shopify inventory for SKU ${sku}: ${err.message}`);\n            }\n        }\n        console.log('Sync job completed successfully');\n        // 7. Return success response\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'Sync completed.',\n            shopifyInventory,\n            updateResults\n        });\n    } catch (error) {\n        console.error('Sync job failed', {\n            error\n        });\n        // Handle errors\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    // Optionally allow GET for testing\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        message: 'Sync endpoint is up.'\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/sync/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/services/shopify.ts":
/*!*********************************!*\
  !*** ./app/services/shopify.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enrichMappingWithShopifyVariantAndInventoryIds: () => (/* binding */ enrichMappingWithShopifyVariantAndInventoryIds),\n/* harmony export */   getMantecaLocationId: () => (/* binding */ getMantecaLocationId),\n/* harmony export */   updateShopifyInventory: () => (/* binding */ updateShopifyInventory)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(rsc)/./app/node_modules/axios/lib/axios.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst SHOPIFY_API_KEY = process.env.SHOPIFY_API_KEY;\nconst SHOPIFY_API_PASSWORD = process.env.SHOPIFY_API_PASSWORD;\nconst SHOPIFY_STORE_URL = process.env.SHOPIFY_STORE_URL;\nconst SHOPIFY_API_VERSION = process.env.SHOPIFY_API_VERSION || '2023-10';\nconst mappingPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'mapping.json');\nconst shopifyGraphqlUrl = `https://${SHOPIFY_STORE_URL}/admin/api/${SHOPIFY_API_VERSION}/graphql.json`;\nasync function getVariantAndInventoryItemIdBySku(sku) {\n    const query = `\n    query GetVariantAndInventoryBySku($sku: String!) {\n      products(first: 1, query: $sku) {\n        edges {\n          node {\n            variants(first: 10) {\n              edges {\n                node {\n                  id\n                  sku\n                  inventoryItem {\n                    id\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n    const variables = {\n        sku\n    };\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(shopifyGraphqlUrl, {\n        query,\n        variables\n    }, {\n        headers: {\n            'Content-Type': 'application/json',\n            'X-Shopify-Access-Token': SHOPIFY_API_PASSWORD\n        }\n    });\n    const products = response.data.data.products.edges;\n    for (const productEdge of products){\n        for (const variantEdge of productEdge.node.variants.edges){\n            if (variantEdge.node.sku === sku) {\n                return {\n                    variantId: variantEdge.node.id,\n                    inventoryItemId: variantEdge.node.inventoryItem.id\n                };\n            }\n        }\n    }\n    return {\n        variantId: null,\n        inventoryItemId: null\n    };\n}\nlet mantecaLocationId = null;\nasync function getMantecaLocationId() {\n    if (mantecaLocationId) return mantecaLocationId;\n    const url = `https://${SHOPIFY_STORE_URL}/admin/api/${SHOPIFY_API_VERSION}/locations.json`;\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(url, {\n        headers: {\n            'Content-Type': 'application/json',\n            'X-Shopify-Access-Token': SHOPIFY_API_PASSWORD\n        }\n    });\n    const locations = response.data.locations;\n    const manteca = locations.find((loc)=>loc.name.toLowerCase() === 'manteca');\n    if (!manteca) throw new Error('Manteca location not found in Shopify locations');\n    mantecaLocationId = manteca.id.toString();\n    return mantecaLocationId;\n}\nfunction extractIdFromGid(gid) {\n    // e.g., gid://shopify/InventoryItem/53137749803317 -> 53137749803317\n    return gid.split('/').pop() || gid;\n}\nasync function updateShopifyInventory(inventoryItemId, available) {\n    if (!inventoryItemId) throw new Error('inventoryItemId is required for updateShopifyInventory');\n    const locationId = await getMantecaLocationId();\n    const url = `https://${SHOPIFY_STORE_URL}/admin/api/${SHOPIFY_API_VERSION}/inventory_levels/set.json`;\n    const payload = {\n        location_id: locationId,\n        inventory_item_id: extractIdFromGid(inventoryItemId),\n        available\n    };\n    const headers = {\n        'Content-Type': 'application/json',\n        'X-Shopify-Access-Token': SHOPIFY_API_PASSWORD\n    };\n    console.log('[Shopify Debug] Inventory Update URL:', url);\n    console.log('[Shopify Debug] Payload:', JSON.stringify(payload));\n    console.log('[Shopify Debug] Headers:', headers);\n    try {\n        await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(url, payload, {\n            headers\n        });\n    } catch (error) {\n        console.error('[Shopify Debug] Error updating inventory:', error.response?.data || error.message);\n        throw error;\n    }\n}\nasync function enrichMappingWithShopifyVariantAndInventoryIds() {\n    const mapping = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(mappingPath, 'utf-8'));\n    let updated = false;\n    for (const product of mapping.products){\n        if (product.shopify_sku && (!product.shopify_variant_id || !product.shopify_inventory_item_id)) {\n            const { variantId, inventoryItemId } = await getVariantAndInventoryItemIdBySku(product.shopify_sku);\n            if (variantId) {\n                product.shopify_variant_id = variantId;\n                updated = true;\n            }\n            if (inventoryItemId) {\n                product.shopify_inventory_item_id = inventoryItemId;\n                updated = true;\n            }\n        }\n        if (Array.isArray(product.bundle_components)) {\n            continue;\n        }\n    }\n    if (updated) {\n        fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(mappingPath, JSON.stringify(mapping, null, 2));\n        console.log('mapping.json updated with Shopify variant and inventory item IDs.');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/services/shopify.ts\n");

/***/ }),

/***/ "(rsc)/./app/src/services/flowtrac.ts":
/*!**************************************!*\
  !*** ./app/src/services/flowtrac.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchFlowtracInventory: () => (/* binding */ fetchFlowtracInventory),\n/* harmony export */   filterProductsToSync: () => (/* binding */ filterProductsToSync),\n/* harmony export */   testFlowtracConnection: () => (/* binding */ testFlowtracConnection)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(rsc)/./app/node_modules/axios/lib/axios.js\");\n/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! qs */ \"(rsc)/./node_modules/qs/lib/index.js\");\n/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(qs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\nconst FLOWTRAC_API_URL = process.env.FLOWTRAC_API_URL;\nconst FLOWTRAC_BADGE = process.env.FLOWTRAC_BADGE;\nconst FLOWTRAC_PIN = process.env.FLOWTRAC_PIN;\nconst mappingPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'mapping.json');\nasync function getFlowtracAuthCookie() {\n    const loginRes = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(`${FLOWTRAC_API_URL}/device-login/`, qs__WEBPACK_IMPORTED_MODULE_3___default().stringify({\n        badge: FLOWTRAC_BADGE,\n        pin: FLOWTRAC_PIN\n    }), {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        withCredentials: true\n    });\n    const cookies = loginRes.headers['set-cookie'];\n    if (!cookies) throw new Error('No session cookie from Flowtrac login');\n    const flowAuthCookie = cookies.find((c)=>c.startsWith('flow_auth='));\n    if (!flowAuthCookie) throw new Error('No flow_auth cookie from Flowtrac login');\n    return flowAuthCookie;\n}\nasync function fetchAllFlowtracProducts(flowAuthCookie) {\n    const productsRes = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`${FLOWTRAC_API_URL}/products`, {\n        headers: {\n            Cookie: flowAuthCookie\n        },\n        withCredentials: true\n    });\n    return productsRes.data;\n}\nfunction getProductIdForSku(sku, mapping) {\n    for (const product of mapping.products){\n        if (product.flowtrac_sku === sku && product.flowtrac_product_id) return product.flowtrac_product_id;\n        if (product.bundle_components) {\n            for (const comp of product.bundle_components){\n                if (comp.flowtrac_sku === sku && comp.flowtrac_product_id) return comp.flowtrac_product_id;\n            }\n        }\n    }\n    return undefined;\n}\nfunction setProductIdForSku(sku, product_id, mapping) {\n    let updated = false;\n    for (const product of mapping.products){\n        if (product.flowtrac_sku === sku) {\n            if (product.flowtrac_product_id !== product_id) {\n                product.flowtrac_product_id = product_id;\n                updated = true;\n            }\n        }\n        if (product.bundle_components) {\n            for (const comp of product.bundle_components){\n                if (comp.flowtrac_sku === sku) {\n                    if (comp.flowtrac_product_id !== product_id) {\n                        comp.flowtrac_product_id = product_id;\n                        updated = true;\n                    }\n                }\n            }\n        }\n    }\n    return updated;\n}\nasync function fetchFlowtracInventory(skus) {\n    // 1. Authenticate to get session cookie\n    const flowAuthCookie = await getFlowtracAuthCookie();\n    // 2. Load mapping.json\n    const mapping = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(mappingPath, 'utf-8'));\n    // 3. Fetch all Flowtrac products once (for self-healing)\n    const products = await fetchAllFlowtracProducts(flowAuthCookie);\n    const skuToProductId = {};\n    for (const p of products){\n        if (p.product) skuToProductId[p.product] = p.product_id;\n        if (p.barcode) skuToProductId[p.barcode] = p.product_id;\n    }\n    let mappingUpdated = false;\n    // 4. Ensure all SKUs have product_id, self-heal if missing\n    const skuToPidForQuery = {};\n    for (const sku of skus){\n        let pid = getProductIdForSku(sku, mapping);\n        if (!pid) {\n            pid = skuToProductId[sku];\n            if (pid) {\n                if (setProductIdForSku(sku, pid, mapping)) mappingUpdated = true;\n            } else {\n                throw new Error(`SKU '${sku}' not found in Flowtrac products.`);\n            }\n        }\n        skuToPidForQuery[sku] = pid;\n    }\n    if (mappingUpdated) {\n        fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(mappingPath, JSON.stringify(mapping, null, 2));\n        console.log('mapping.json updated with missing Flowtrac product_ids during sync.');\n    }\n    // 5. Query Flowtrac using product_id for each SKU\n    const inventory = {};\n    const today = new Date();\n    for (const [sku, product_id] of Object.entries(skuToPidForQuery)){\n        // Query all bins for the product_id\n        const params = {\n            product_id\n        };\n        const binsRes = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`${FLOWTRAC_API_URL}/product-warehouse-bins`, {\n            headers: {\n                Cookie: flowAuthCookie\n            },\n            params,\n            withCredentials: true\n        });\n        const bins = binsRes.data;\n        // Sum 'quantity' where include_in_available is 'Yes', warehouse is 'Manteca', and not expired\n        inventory[sku] = bins.filter((b)=>{\n            if (b.include_in_available !== 'Yes') return false;\n            if (b.warehouse !== 'Manteca') return false;\n            if (b.expiration_date) {\n                const exp = new Date(b.expiration_date);\n                if (exp < today) return false;\n            }\n            return true;\n        }).reduce((sum, b)=>sum + (Number(b.quantity) || 0), 0);\n    }\n    return inventory;\n}\n/**\n * Filters Flowtrac products to only those that are mapped for syncing (by SKU), and optionally active.\n * @param flowtracProducts Array of Flowtrac product objects\n * @param onlyActive If true, only include products with active === 'Active'\n */ function filterProductsToSync(flowtracProducts, onlyActive = true) {\n    // Load mapping.json (assume project root)\n    const mappingPath = path__WEBPACK_IMPORTED_MODULE_1___default().resolve(__dirname, '../../../mapping.json');\n    const mapping = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(mappingPath, 'utf-8'));\n    // Collect all mapped SKUs from simple and bundle products\n    const mappedSkus = new Set();\n    for (const product of mapping.products){\n        if ('flowtrac_sku' in product && product.flowtrac_sku) {\n            mappedSkus.add(product.flowtrac_sku);\n        }\n        if ('bundle_components' in product && Array.isArray(product.bundle_components)) {\n            for (const comp of product.bundle_components){\n                if (comp.flowtrac_sku) mappedSkus.add(comp.flowtrac_sku);\n            }\n        }\n    }\n    // Filter Flowtrac products by SKU and (optionally) active status\n    return flowtracProducts.filter((p)=>mappedSkus.has(p.product) && (!onlyActive || p.active === 'Active'));\n}\n// Test function to verify Flowtrac API connectivity using /device-login/\nasync function testFlowtracConnection() {\n    try {\n        // 1. Login to get session cookie\n        const loginRes = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(`${FLOWTRAC_API_URL}/device-login/`, qs__WEBPACK_IMPORTED_MODULE_3___default().stringify({\n            badge: FLOWTRAC_BADGE,\n            pin: FLOWTRAC_PIN\n        }), {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            withCredentials: true\n        });\n        // Log the full response for troubleshooting\n        console.log('Flowtrac loginRes.headers:', loginRes.headers);\n        console.log('Flowtrac loginRes.data:', loginRes.data);\n        const cookies = loginRes.headers['set-cookie'];\n        if (!cookies || !cookies.length) {\n            return {\n                error: 'No session cookie returned from device-login.',\n                headers: loginRes.headers,\n                data: loginRes.data\n            };\n        }\n        const flowAuthCookie = cookies.find((c)=>c.startsWith('flow_auth='));\n        if (!flowAuthCookie) {\n            return {\n                error: 'No flow_auth session cookie found.',\n                headers: loginRes.headers,\n                data: loginRes.data\n            };\n        }\n        // 2. Use flow_auth cookie to fetch products (no limit param)\n        try {\n            const productsRes = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`${FLOWTRAC_API_URL}/products`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Cookie': flowAuthCookie.split(';')[0]\n                }\n            });\n            return productsRes.data;\n        } catch (productsError) {\n            // Log the full error response\n            console.log('Flowtrac productsError.response?.data:', productsError.response?.data);\n            console.log('Flowtrac productsError.response?.headers:', productsError.response?.headers);\n            return {\n                error: productsError.message,\n                data: productsError.response?.data,\n                headers: productsError.response?.headers\n            };\n        }\n    } catch (error) {\n        return {\n            error: error.message\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/src/services/flowtrac.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsync%2Froute&page=%2Fapi%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsync%2Froute.ts&appDir=%2FUsers%2Fjamesdaniels%2FDesktop%2Fflowtracshopifyinvv2%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjamesdaniels%2FDesktop%2Fflowtracshopifyinvv2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsync%2Froute&page=%2Fapi%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsync%2Froute.ts&appDir=%2FUsers%2Fjamesdaniels%2FDesktop%2Fflowtracshopifyinvv2%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjamesdaniels%2FDesktop%2Fflowtracshopifyinvv2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_jamesdaniels_Desktop_flowtracshopifyinvv2_app_api_sync_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/sync/route.ts */ \"(rsc)/./app/api/sync/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/sync/route\",\n        pathname: \"/api/sync\",\n        filename: \"route\",\n        bundlePath: \"app/api/sync/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/jamesdaniels/Desktop/flowtracshopifyinvv2/app/api/sync/route.ts\",\n    nextConfigOutput,\n    userland: _Users_jamesdaniels_Desktop_flowtracshopifyinvv2_app_api_sync_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/sync/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsync%2Froute&page=%2Fapi%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsync%2Froute.ts&appDir=%2FUsers%2Fjamesdaniels%2FDesktop%2Fflowtracshopifyinvv2%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjamesdaniels%2FDesktop%2Fflowtracshopifyinvv2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/axios","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/call-bind-apply-helpers","vendor-chunks/asynckit","vendor-chunks/get-proto","vendor-chunks/qs","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/debug","vendor-chunks/object-inspect","vendor-chunks/mime-db","vendor-chunks/hasown","vendor-chunks/get-intrinsic","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/side-channel","vendor-chunks/side-channel-weakmap","vendor-chunks/side-channel-map","vendor-chunks/side-channel-list","vendor-chunks/call-bound","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/mime-types","vendor-chunks/has-tostringtag","vendor-chunks/has-flag","vendor-chunks/es-set-tostringtag","vendor-chunks/delayed-stream","vendor-chunks/combined-stream"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsync%2Froute&page=%2Fapi%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsync%2Froute.ts&appDir=%2FUsers%2Fjamesdaniels%2FDesktop%2Fflowtracshopifyinvv2%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjamesdaniels%2FDesktop%2Fflowtracshopifyinvv2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();